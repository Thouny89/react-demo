{"version":3,"sources":["components/Apod.js","components/Omdb.js","App.js","reportWebVitals.js","index.js"],"names":["Apod","useState","imageText","setImageText","url","setUrl","useEffect","fetch","then","response","json","data","explanation","catch","err","console","log","className","alt","src","href","Omdb","search","setSearch","movieTitle","setMovieTitle","movieImg","setMovieImg","plot","setPlot","year","setYear","rating","setRating","target","rel","placeholder","value","onChange","e","class","onClick","document","querySelector","classList","add","Title","Poster","Plot","Year","Ratings","Source","Value","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.822d1393.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Apod() {\r\n  const [imageText, setImageText] = useState('');\r\n  const [url, setUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.nasa.gov/planetary/apod?api_key=5xBHNK1AFkP7rPGe46GlDRe0ufIPNZy57XuVdunE')\r\n    .then (response => response.json())\r\n    .then(data => {\r\n      setImageText(data.explanation);\r\n      setUrl(data.url);\r\n    })\r\n    .catch(err => console.log(err))\r\n  }, [])\r\n  \r\n  return (\r\n    <div className=\"Apod\">\r\n \r\n        \r\n          <div className=\"header\"> \r\n            <h1>NASA:</h1>\r\n            <h2> Astronomy Picture of the Day (APOD)</h2>\r\n          </div>\r\n          <div className=\"container-card\">\r\n            <img className=\"POD-img\" alt=\"APOD\" src={url} />  \r\n            \r\n              <p className=\"img-text\">{imageText}\r\n              </p>\r\n              <a className=\"source\" href=\"https://api.nasa.gov/\">Source</a>\r\n          \r\n          </div>\r\n          \r\n \r\n       \r\n    </div>\r\n \r\n  );\r\n}\r\n\r\nexport default Apod;","\r\nimport React, {  useState } from 'react';\r\n\r\n\r\n\r\nfunction Omdb() {\r\n  const [search, setSearch] = useState('');\r\n  const [movieTitle, setMovieTitle] = useState('');\r\n  const [movieImg, setMovieImg] = useState('');\r\n  const [plot, setPlot] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [rating, setRating] = useState('');\r\n  \r\n\r\nconst fetchData = () => {\r\n\r\n    document.querySelector(\".container-card\").classList.add(\"active\");\r\n\r\n        fetch('https://www.omdbapi.com/?t=' + search + '&apikey=47a89f9b')\r\n        .then (response => response.json())\r\n        .then(data => {\r\n          setMovieTitle(data.Title);\r\n          setMovieImg(data.Poster);\r\n          setPlot(data.Plot);\r\n          setYear(data.Year);\r\n          setRating(data.Ratings[0]);\r\n        \r\n        })\r\n        .catch(err => console.log(err))\r\n      }\r\n\r\nconst inputChanged=(e) => {\r\n  setSearch(e.target.value);\r\n}\r\n\r\n\r\n        \r\n  return(\r\n    <div className=\"Omdb\">\r\n        <div className=\"header\"> \r\n            <h1>THE OPEN MOVIE DATABASE (<a href=\"https://omdbapi.com/\" target=\"_blank\" rel=\"noreferrer\" >https://omdbapi.com/</a>)</h1>\r\n\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n        \r\n            <input className=\"search-field\" placeholder=\"Enter title of a movie\" value={search} onChange={inputChanged}/>\r\n            <button class=\"search-button\" onClick={fetchData}>Search</button>\r\n          </div>\r\n        <img class=\"poster\" alt=\"\" src={movieImg}></img>\r\n        <div className=\"container-card\"> \r\n            <p className=\"title\">{movieTitle} {year} </p>\r\n            <p className=\"rating\"> {rating.Source} : {rating.Value}</p>\r\n            <p className=\"plot\">{plot}</p> \r\n          </div>\r\n          \r\n \r\n       \r\n    </div>\r\n  );\r\n  }\r\n\r\nexport default Omdb;","import './App.css';\n\nimport Apod from './components/Apod';\nimport Omdb from './components/Omdb';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <BrowserRouter>\n        <div>\n          <nav className=\"navbar\">\n            <h1 className=\"header-h1\"> REACT API Project </h1>\n            <Link className=\"link\" to=\"/react-demo\">OMDb</Link>{' '}\n            <Link className=\"link\" to=\"/apod\">APOD</Link>{' '}\n            </nav>\n            <Switch>\n              <Route exact path=\"/react-demo\" component={Omdb} />  \n              <Route path=\"/apod\" component={Apod} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}